{"version":3,"file":"static/js/677.ee3cfce8.chunk.js","mappings":"mMACA,EAAwB,gC,SCUxB,EATyB,SAACA,GACxB,OACE,oBAAQC,UAAWC,EAAnB,WACE,uBAAIF,EAAMG,QACV,gCAAaH,EAAMI,a,2BC0CzB,EAxCoB,WAClB,IAEQC,GAFOC,EAAAA,EAAAA,MAEPD,QAER,GAKIE,EAAAA,EAAAA,GAAQC,EAAAA,IAAgB,GAJ1BC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,EAAAA,EAAAA,YAAU,WACRL,EAAYJ,KACX,CAACI,EAAaJ,IAEF,YAAXK,GAEA,gBAAKT,UAAU,WAAf,UACE,SAACc,EAAA,EAAD,MAKFF,GACK,cAAGZ,UAAU,WAAb,SAAyBY,IAG7BF,EAAYR,MAKf,UAAC,EAAAa,SAAD,YACE,SAAC,EAAD,CAAkBb,KAAMQ,EAAYR,KAAMC,OAAQO,EAAYP,UAC9D,SAAC,KAAD,QANK","sources":["webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__oYGGk\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\r\nimport { useParams, Outlet } from \"react-router-dom\";\r\n\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"names":["props","className","classes","text","author","quoteId","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","Fragment"],"sourceRoot":""}